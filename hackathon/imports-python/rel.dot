digraph Relation { node [shape=box]
"org.softlang.recognizer.RecognitionException" [shape=ellipse]
"org.softlang.recognizer.Token" [shape=ellipse]
"org.softlang.recognizer.Lexer" [shape=ellipse]
"org.softlang.recognizer.Lexer" -> "org.softlang.recognizer.Token.*"
"org.softlang.recognizer.Lexer" -> "java.io.File"
"org.softlang.recognizer.Lexer" -> "java.io.BufferedReader"
"org.softlang.recognizer.Lexer" -> "java.io.FileNotFoundException"
"org.softlang.recognizer.Lexer" -> "java.io.FileReader"
"org.softlang.recognizer.Lexer" -> "java.io.IOException"
"org.softlang.recognizer.Lexer" -> "java.io.Reader"
"org.softlang.recognizer.Lexer" -> "java.util.HashMap"
"org.softlang.recognizer.Lexer" -> "java.util.Iterator"
"org.softlang.recognizer.Lexer" -> "java.util.Map"
"org.softlang.tests.Operations" [shape=ellipse]
"org.softlang.tests.Operations" -> "org.junit.Test"
"org.softlang.tests.Operations" -> "org.junit.Assert.assertEquals"
"org.softlang.tests.Operations" -> "org.softlang.operations.Total"
"org.softlang.tests.Operations" -> "org.softlang.operations.Cut"
"org.softlang.tests.Operations" -> "java.io.File"
"org.softlang.tests.Operations" -> "java.io.FileNotFoundException"
"org.softlang.tests.Operations" -> "java.io.IOException"
"org.softlang.recognizer.Acceptor" [shape=ellipse]
"org.softlang.recognizer.Acceptor" -> "org.softlang.recognizer.Token.*"
"org.softlang.recognizer.Acceptor" -> "java.io.FileNotFoundException"
"org.softlang.operations.Total" [shape=ellipse]
"org.softlang.operations.Total" -> "org.softlang.recognizer.Parser"
"org.softlang.recognizer.Parser" [shape=ellipse]
"org.softlang.recognizer.Parser" -> "org.softlang.recognizer.Token.*"
"org.softlang.recognizer.Parser" -> "java.io.FileNotFoundException"
"org.softlang.tests.Noop" [shape=ellipse]
"org.softlang.tests.Noop" -> "org.junit.Test"
"org.softlang.tests.Noop" -> "org.softlang.recognizer.*"
"org.softlang.tests.Noop" -> "java.io.File"
"org.softlang.tests.Noop" -> "java.io.FileNotFoundException"
"org.softlang.operations.Cut" [shape=ellipse]
"org.softlang.operations.Cut" -> "org.softlang.recognizer.Parser"
"org.softlang.operations.Cut" -> "java.io.Writer"
"org.softlang.operations.Cut" -> "java.io.OutputStreamWriter"
"org.softlang.operations.Cut" -> "java.io.FileOutputStream"
"org.softlang.operations.Cut" -> "java.io.IOException"
}
